from sage.all import *

# a,b = [x,y]
# dE : derivate
def sum(a, b, p, dE):
	x1 = mod(a[0], p)
	y1 = mod(a[1], p)
	x2 = mod(b[0], p)
	y2 = mod(b[1], p)

	if x1 == x2 and y1 == -y2:
		return [0, 0]

	elif x1 == x2 and y1 == y2:
		return double(a, p, dE)
	
	l = (y2 - y1) / (x2 - x1)
	x3 = l**2 - x1 - x2
	y3 = l*(x1 - x3) - y1

	return [x3, y3]

# a = [x,y]
# dE : derivate
def double(a, p, dE):
	x1 = mod(a[0], p)
	y1 = mod(a[1], p)
	d = dE(x1, y1)
	l = d[1] / d[0]
	x3 = l**2 - 2*x1
	y3 = l*(x1 - x3) - y1

	return [x3, y3]
	

if __name__ == '__main__':
	P = [8045, 6936]
	p = 9739
	E	= lambda x, y: y**2 % p == (x**3 + 497*x + 1768) % p
	# derivate(x,y) = [x,y]
	dE	= lambda x, y: [2*y % p, (3*x**2 + 497) % p]

	Q = [P[0], P[1]]
	try:
		for i in range(p):
			print(Q, i)
			Q = sum(Q, P, p, dE)
			if sum(Q, P, p, dE) == [0, 0]:
				print(Q, i)
				break
	except e:
		print(Q)

