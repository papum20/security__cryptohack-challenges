from criminal_source import Point
import json
from sage.all import *
from pwn import *



G_source = Point(
	0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296,
    0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
)
public_source = {
	'www.cryptohack.org': Point(0xE9E4EBA2737E19663E993CF62DFBA4AF71C703ACA0A01CB003845178A51B859D, 0x179DF068FC5C380641DB2661121E568BB24BF13DE8A8968EF3D98CCF84DAF4A9),
	'www.bing.com': Point(0x3B827FF5E8EA151E6E51F8D0ABF08D90F571914A595891F9998A5BD49DFA3531, 0xAB61705C502CA0F7AA127DEC096B2BBDC9BD3B4281808B3740C320810888592A),
	'www.gchq.gov.uk': Point(0xDEDFC883FEEA09DE903ECCB03C756B382B2302FFA296B03E23EEDF94B9F5AF94, 0x15CEBDD07F7584DBC7B3F4DEBBA0C13ECD2D2D8B750CBF97438AF7357CEA953D)
}

payload = {
	"private_key": 2,
	"host": "www.bing.com",
	"curve": "secp256r1",
	"generator": [G_source.x, G_source.y]
}

print(json.dumps(payload))

# secp256r1
p = 0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff
K = GF(p)
a = K(0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc)
b = K(0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b)
E = EllipticCurve(K, (a, b))
#G = E(0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296, 0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5)
G = E(G_source.x, G_source.y)
E.set_order(0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551 * 0x1)


public = dict([ [k, E(v.x, v.y)] for k, v in public_source.items() ])
print(f'{public = }')


generator_xy =  public['www.bing.com'].xy()
payload['generator'] = [int(generator_xy[0]), int(generator_xy[1])]
payload['private_key'] = int(E.order() + 1)
print(f'{payload = }')
print(f'{json.dumps(payload) = }')

HOST = "socket.cryptohack.org"
PORT = 13382
r = remote(HOST, PORT)

out = r.recv()
print(out)
r.sendline(json.dumps(payload).encode())
print(r.recvall())
r.close()

