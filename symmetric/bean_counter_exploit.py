from requests import get
from pwn import xor
import binascii


PNG_MAGIC_BYTES = bytes.fromhex('89504E470D0A1A0A')
PNG_LAST_12 = bytes.fromhex('0000000049454e44ae426082')
HOST = 'https://aes.cryptohack.org/bean_counter/'
URL_ENC = f'{HOST}encrypt/'

# png is 14267 bytes long, and 14267%16 = 11


png = bytes.fromhex( get(URL_ENC).json()['encrypted'] )
print(f'png = {png.hex()}')

# bytes 0-7 included
otp0_7 = xor(png[:8], PNG_MAGIC_BYTES)
otp8_10 = xor(png[-3:], PNG_LAST_12[-3:])
otp11_15 = xor(png[-12], PNG_LAST_12[0])
# found experimentally
otp11_15 = xor(png[11:16], b'\x0dIHDR')
otp = otp0_7 + otp8_10 + otp11_15

print(xor(otp,png))

with open('bean_flag.png', 'wb') as f:
	f.write(xor(otp,png))
	
with open('bean_flag.md', 'w') as f:
    hex_dump = binascii.hexlify(xor(otp,png)).decode()
    spaced_hex_dump = ' '.join(hex_dump[i:i+2] for i in range(0, len(hex_dump), 2))
    f.write(spaced_hex_dump)
    
print(f'otp = {otp.hex()}')
print(f'len(png) = {len(png)}')