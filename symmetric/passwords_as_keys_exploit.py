from Crypto.Cipher import AES
import hashlib
from requests import get


# /usr/share/dict/words from
# https://gist.githubusercontent.com/wchargin/8927565/raw/d9783627c731268fb2935a731a618aa8e95cf465/words

HOST = "https://aes.cryptohack.org/passwords_as_keys/"


def decrypt(ciphertext, password_hash):
    ciphertext = bytes.fromhex(ciphertext)
    key = bytes.fromhex(password_hash)

    cipher = AES.new(key, AES.MODE_ECB)
    try:
        decrypted = cipher.decrypt(ciphertext)
    except ValueError as e:
        return {"error": str(e)}

    return {"plaintext": decrypted.hex()}

def encrypt_flag():
    return get(f'{HOST}/encrypt_flag/').json()

FLAG_ENC = encrypt_flag()['ciphertext']
print(f'{FLAG_ENC = }')


with open("/usr/share/dict/words") as f:
    words = [w.strip() for w in f.readlines()]

for word in words:
	KEY = hashlib.md5(word.encode()).digest().hex()
	print(f'{word = }\t{KEY = }')
    
	dec = decrypt(FLAG_ENC, KEY)['plaintext']
	print(f'{dec = }')
	if bytes.fromhex(dec).startswith(b'crypto'):
		print(bytes.fromhex(dec).decode())
		break